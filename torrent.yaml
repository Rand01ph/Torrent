apiVersion: v1
kind: Namespace
metadata:
  name: monitoring

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: torrent
  namespace: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: torrent
  namespace: monitoring
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: torrent
roleRef:
  kind: ClusterRole
  name: torrent
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: torrent
  namespace: monitoring
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: monitoring
  labels:
    k8s-app: torrent-logging
data:
  filebeat.yml: |-
    logging.level: info
    logging.to_files: true
    logging.metrics.enabled: true
    logging.files:
      path: /tmp/filebeat
      name: filebeat_log
      keepfiles: 7
      permissions: 0644
    filebeat.config:
      inputs:
        # Mounted `filebeat-inputs` configmap:
        path: ${path.config}/inputs.d/*.yml
        # Reload inputs configs as they change:
        reload.enabled: true
        reload.period: 10s
      modules:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: true
        reload.period: 10s
    output.kafka:
      enabled: true
      hosts: ["10.5.25.3:9092"]
      version: 0.10.2.1
      topic: '%{[fields.module_name]}'
      required_acks: 1
      compression: gzip
      max_message_bytes: 1000000
#    output.file:
#      path: "/tmp/torrent"
#      filename: torrent

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-inputs
  namespace: monitoring
  labels:
    k8s-app: torrent-logging
data:
  kubernetes.yml: |-
    - type: docker
      containers.ids:
      - "*"
      processors:
        - add_kubernetes_metadata:
            in_cluster: true

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: torrent-filebeat
  namespace: monitoring
  labels:
    k8s-app: torrent-logging
spec:
  selector:
    matchLabels:
      name: torrent-filebeat
  template:
    metadata:
      labels:
        name: torrent-filebeat
    spec:
      serviceAccountName: torrent
      containers:
      - name: torrent
        image: 10.5.29.100:5000/torrent
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: /var/run/docker.sock
            name: docker-sock-volume
          # mount for generate log inputs
          - mountPath: /tmp
            name: inputs
          # copy input config from ConfigMap
          - name: input-config-map
            mountPath: /etc/config/input

      - name: filebeat
        image: elastic/filebeat:6.5.4
        imagePullPolicy: IfNotPresent
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
          - name: ELASTICSEARCH_HOST
            value: elasticsearch
          - name: ELASTICSEARCH_PORT
            value: "9200"
          - name: ELASTICSEARCH_USERNAME
            value: elastic
          - name: ELASTICSEARCH_PASSWORD
            value: changeme
          - name: ELASTIC_CLOUD_ID
            value:
          - name: ELASTIC_CLOUD_AUTH
            value:
        securityContext:
          runAsUser: 0
          # If using Red Hat OpenShift uncomment this:
          #privileged: true
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
          - name: config
            mountPath: /etc/filebeat.yml
            readOnly: true
            subPath: filebeat.yml
          - name: inputs
            mountPath: /usr/share/filebeat/inputs.d
            readOnly: true
          - name: data
            mountPath: /usr/share/filebeat/data
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
            readOnly: true
          - name: root
            mountPath: /host
            readOnly: true
      volumes:
        - name: docker-sock-volume
          hostPath:
            path: /var/run/docker.sock
            type: File
        - name: config
          configMap:
            defaultMode: 0600
            name: filebeat-config
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: inputs
          emptyDir: {}
#            defaultMode: 0600
#            name: filebeat-inputs
        # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
        - name: data
          hostPath:
            path: /var/lib/filebeat-data
            type: DirectoryOrCreate
        # use for collect emptyDir log
        - name: root
          hostPath:
            path: /
        - name: input-config-map
          configMap:
            # Provide the name of the ConfigMap containing the files you want
            # to add to the container
            name: filebeat-inputs
